from malwareDetection.config.config_builder import ConfigurationBuilder
from malwareDetection import logger
from malwareDetection.components.model_pusher import ModelPusher

class ModelPusherPipeline():
    def __init__(self) -> None:
        pass

    def run(self) -> None:
        config = ConfigurationBuilder()
        pusher_config = config.ModelPusherConfigBuilder()
        pusher = ModelPusher(pusher_config)
        pusher.push_artifact()
        
        if pusher.check_for_existing_model():
            logger.info("model currently exists in the bucket. Checking if local model is better")
            if pusher.is_curr_model_better():
                pusher.push_model()

        else:
            pusher.push_model()

if __name__ == "__main__":
    try:
        logger.info("Stage 6 - Model Pusher starting ")
        obj = ModelPusherPipeline()
        obj.run()
        logger.info("Stage 6 - Model Pusher ended")
    except Exception as e:
        logger.info(f"ERROR: {e}")
        raise e
