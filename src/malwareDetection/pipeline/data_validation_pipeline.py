from malwareDetection.config.config_builder import ConfigurationBuilder
from malwareDetection.components.data_validation import DataValidation
from malwareDetection import logger

class DataValidationPipeline():
    def __init__(self):
        pass

    def run(self):
        config = ConfigurationBuilder()
        data_validation_config = config.DataValidationConfigBuilder()
        data_validation = DataValidation(data_validation_config)
        schema = data_validation.get_schema()
        data_validation.check(schema)

if __name__ == '__main__':
    try:
        logger.info("Stage 2 - Data Validation starting ")
        obj = DataValidationPipeline()
        obj.run()
        logger.info("Stage 2 - Data Validation ended")
    except Exception as e:
        logger.info(f"ERROR: {e}")
        raise e