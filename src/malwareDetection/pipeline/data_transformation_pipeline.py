from malwareDetection.components.data_transformation import DataTransformation
from malwareDetection.config.config_builder import ConfigurationBuilder
from malwareDetection import logger


class DataTransformationPipeline:
    def __init__(self):
        pass

    def run(self):
        config = ConfigurationBuilder()
        data_transformation_config = config.DataTransformationConfigBuilder()
        data_transformation = DataTransformation(data_transformation_config)
        df = data_transformation.create_dataframe()
        transformed_df = data_transformation.make_transformations(df)
        data_transformation.create_train_test_data(transformed_df)

if __name__ == "__main__":
    try:
        logger.info("Stage 3 - Data Transformation starting ")
        obj = DataTransformationPipeline()
        obj.run()
        logger.info("Stage 3 - Data Transformation ended")
    except Exception as e:
        logger.info(f"ERROR: {e}")
        raise e