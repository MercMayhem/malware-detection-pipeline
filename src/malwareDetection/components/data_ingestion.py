from pathlib import Path
from malwareDetection.entity.entities import DataIngestionEntity
import pandas as pd
from pymongo.mongo_client import MongoClient
from pymongo.server_api import ServerApi
from malwareDetection import logger
import os
import sys

class DataIngestion :
    def __init__(self, config : DataIngestionEntity):
        self.artifact_path = Path(config.artifact_path)
        self.database_name = config.database_name
        self.collection_name = config.collection_name

    def download_data(self, client : MongoClient):
        try:
            db = client[self.database_name]
            logger.info("Database accessed")
            collection = db[self.collection_name]
            logger.info("Collection accessed")

        except:
            logger.exception("ERROR: Database Name or Collection Name invalid")
            sys.exit(1)

        data = list(collection.find())
        df = pd.DataFrame(data)

        os.makedirs(self.artifact_path, exist_ok=True)
        df.to_csv(self.artifact_path / "ingested_data.csv", index=False)
        logger.info(f"Downloaded data to {self.artifact_path}")


    def connect_to_database(self) -> MongoClient:
        try:
            server_uri = os.environ["SERVER_URI"]
            client = MongoClient(server_uri, server_api=ServerApi('1'))
            client.admin.command('ping')
            logger.info("Successfully connected to MongoDB Server")
            return client

        except KeyError :
            logger.exception("ERROR: did not set server URI as Environment variable")
            sys.exit(1)

        except Exception as e:
            logger.exception(f"ERROR: {e}")
            sys.exit(1)
        
        
